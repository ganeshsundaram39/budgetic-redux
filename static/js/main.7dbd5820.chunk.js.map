{"version":3,"sources":["components/Header/Header.js","components/Input/Input.js","types/types.js","components/Display/Income/Income.js","components/Display/Expense/Expense.js","components/Display/History/History.js","components/Display/Display.js","Main.js","App.js","reducer/months/months.js","reducer/reducer.js","store/store.js","index.js"],"names":["getInputs","state","incomeList","inputs","filter","input","type","expenseList","getTotal","list","reduce","total","parseFloat","value","getBudget","budget","toFixed","getExpensePercentage","totalIncome","totalExpense","Math","round","connect","expensePercentage","currentMonthYear","dispatch","props","className","uniqid","require","Input","removeFocusClass","budgetSaved","description","key","event","target","this","setState","prevState","preventDefault","storeInputToGlobal","selectInput","focus","onSubmit","handleSubmit","bind","name","onChange","handleChange","ref","select","placeholder","step","Component","Income","length","map","inc","onClick","removeInput","Expense","exp","History","savedList","saveli","i","getSavedListContent","removeMonth","allSaved","Object","keys","month","Main","App","monthNames","getCurrentMonthYear","Date","getMonth","getFullYear","initialState","reducer","action","newInputs","allSavedMonths","REHYDRATE","payload","restoreInputs","persistConfig","storage","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","Root","loading","rootElement","document","getElementById","hasChildNodes","hydrate","render"],"mappings":"0bAwCMA,EAAY,SAAAC,GAAK,MAAK,CAC1BC,WAAYD,EAAME,OACdF,EAAME,OAAOC,QAAO,SAAAC,GAAK,MAAmB,WAAfA,EAAMC,QACnC,GACJC,YAAaN,EAAME,OACfF,EAAME,OAAOC,QAAO,SAAAC,GAAK,MAAmB,YAAfA,EAAMC,QACnC,KAGAE,EAAW,SAAAC,GAAI,OACnBA,EAAKC,QAAO,SAACC,EAAON,GAAR,OAAkBM,EAAQC,WAAWP,EAAMQ,SAAQ,IAE3DC,EAAY,SAAAC,GAAM,OACtBA,EAAS,EAAI,IAAMA,EAAOC,QAAQ,GAAKD,EAAOC,QAAQ,IAElDC,EAAuB,SAACC,EAAaC,GAAd,OAC3BC,KAAKC,MAAOF,EAAeD,EAAe,MAqB7BI,eAnBS,SACtBrB,GADsB,IAEtBE,EAFsB,uDAEbH,EAAUC,GACnBiB,EAHsB,uDAGRV,EAASL,EAAOD,YAAYc,QAAQ,GAClDG,EAJsB,uDAIPX,EAASL,EAAOI,aAAaS,QAAQ,GACpDD,EALsB,uDAKbD,EAAUI,EAAcC,GACjCI,EANsB,uDAMFN,EAAqBC,EAAaC,GAClDF,EAAqBC,EAAaC,GAAgB,IAClD,MARkB,MASlB,CACJJ,SACAG,cACAC,eACAK,iBAAkBvB,EAAMuB,iBACxBD,wBAEyB,SAAAE,GACzB,MAAO,KAEMH,EAzEA,SAAAI,GACb,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,iBAAf,sBACsB,IACpB,0BAAMA,UAAU,wBAAwBD,EAAMF,kBAFhD,KAKA,yBAAKG,UAAU,iBACiB,IAA7Bf,WAAWc,EAAMX,QAAgB,IAAMW,EAAMX,OAASW,EAAMX,QAE/D,yBAAKY,UAAU,mBACb,yBAAKA,UAAU,wBAAf,UACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,yBACZ,IAAMD,EAAMR,aAEf,yBAAKS,UAAU,8BAAf,UAGJ,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,0BAAf,YACA,yBAAKA,UAAU,UACb,yBAAKA,UAAU,2BACZ,IAAMD,EAAMP,cAEf,yBAAKQ,UAAU,gCACZD,EAAMH,0B,cC5BjBK,G,MAASC,EAAQ,KACfC,E,4MACJC,iBAAmB,G,EACnBC,aAAc,E,EACd/B,MAAQ,CACNI,MAAO,CACLC,KAAM,SACN2B,YAAa,GACbpB,MAAO,K,2DAGEqB,EAAKC,GAChB,IAAMtB,EAAQsB,EAAMC,OAAOvB,MACf,SAARqB,IACFG,KAAKN,iBAA6B,YAAVlB,EAAsB,YAAc,IAE9DwB,KAAKC,UAAS,SAAAC,GACZ,MAAO,CACLlC,MAAM,eACDkC,EAAUlC,MADV,eAEF6B,EAAMrB,U,mCAKFsB,GACXA,EAAMK,iBACFH,KAAKpC,MAAMI,MAAM4B,aAAeI,KAAKpC,MAAMI,MAAMQ,QACnDwB,KAAKX,MAAMe,mBAAX,eAAmCJ,KAAKpC,MAAMI,MAA9C,CAAqD6B,IAAKN,OAC1DS,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BlC,MAAO,CACLC,KAAMiC,EAAUlC,MAAMC,KACtB2B,YAAa,GACbpB,MAAO,QAGXwB,KAAKK,YAAYC,W,+BAIX,IAAD,OACP,OACE,yBAAKhB,UAAU,SACb,0BAAMA,UAAU,gBAAgBiB,SAAUP,KAAKQ,aAAaC,KAAKT,OAC/D,4BACEU,KAAK,OACLpB,UAAW,aAAeU,KAAKN,iBAC/BlB,MAAOwB,KAAKpC,MAAMI,MAAMC,KACxB0C,SAAUX,KAAKY,aAAaH,KAAKT,KAAM,QACvCa,IAAK,SAAAC,GACH,EAAKT,YAAcS,IAGrB,4BAAQtC,MAAM,UAAd,KACA,4BAAQA,MAAM,WAAd,MAEF,2BACEP,KAAK,OACLO,MAAOwB,KAAKpC,MAAMI,MAAM4B,YACxBe,SAAUX,KAAKY,aAAaH,KAAKT,KAAM,eACvCV,UAAW,oBAAsBU,KAAKN,iBACtCqB,YAAY,oBAEd,2BACE9C,KAAK,SACLO,MAAOwB,KAAKpC,MAAMI,MAAMQ,MACxBmC,SAAUX,KAAKY,aAAaH,KAAKT,KAAM,SACvCV,UAAW,cAAgBU,KAAKN,iBAChCsB,KAAK,OACLD,YAAY,UAEd,4BACE9C,KAAK,SACLqB,UAAW,aAAeU,KAAKN,iBAAmB,MAAQ,KAE1D,uBAAGJ,UAAU,sB,GA1EL2B,aAyFLhC,eARS,SAAArB,GACtB,MAAO,MAEkB,SAAAwB,GACzB,MAAO,CACLgB,mBAAoB,SAAApC,GAAK,OAAIoB,EAAS,CAAEnB,KC3FnB,YD2FoCO,MAAOR,QAGrDiB,CAGbQ,GEvEayB,G,YAvBA,SAAA7B,GACb,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,iBAAf,UACCD,EAAMxB,WAAWsD,OAAS,GACzB9B,EAAMxB,WAAWuD,KAAI,SAAAC,GAAG,OACtB,yBAAK/B,UAAU,iBAAiBO,IAAKwB,EAAIxB,KACvC,0BAAMP,UAAU,eAAe+B,EAAIzB,aACnC,0BAAMN,UAAU,SACb,IAAMf,WAAW8C,EAAI7C,OAAOG,QAAQ,IAEvC,0BAAMW,UAAU,UACd,uBACEA,UAAU,cACVgC,QAASjC,EAAMkC,YAAYd,KAAK,KAAMY,EAAIxB,eCQ3C2B,G,MAvBC,SAAAnC,GACd,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,kBAAf,WACCD,EAAMnB,YAAYiD,OAAS,GAC1B9B,EAAMnB,YAAYkD,KAAI,SAAAK,GAAG,OACvB,yBAAKnC,UAAU,kBAAkBO,IAAK4B,EAAI5B,KACxC,0BAAMP,UAAU,eAAemC,EAAI7B,aACnC,0BAAMN,UAAU,SACb,IAAMf,WAAWkD,EAAIjD,OAAOG,QAAQ,IAEvC,0BAAMW,UAAU,UACd,uBACEA,UAAU,cACVgC,QAASjC,EAAMkC,YAAYd,KAAK,KAAMgB,EAAI5B,eCY3C6B,G,MAzBC,SAAArC,GACd,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,iBAAf,WACCD,EAAMsC,UAAUR,OAAS,GACxB9B,EAAMsC,UAAUP,KAAI,SAACQ,EAAQC,GAAT,OAClB,yBAAKvC,UAAU,iBAAiBO,IAAKgC,GACnC,0BACEvC,UAAU,oBACVgC,QAASjC,EAAMyC,oBAAoBrB,KAAK,KAAMmB,IAE7CA,GAEH,0BAAMtC,UAAU,UACd,uBACEA,UAAU,cACVgC,QAASjC,EAAM0C,YAAYtB,KAAK,KAAMmB,aCWtD,IAuBe3C,eAvBS,SAAArB,GACtB,MAAO,CACLC,WACED,EAAME,QAAUF,EAAME,OAAOqD,OAAS,EAClCvD,EAAME,OAAOC,QAAO,SAAAC,GAAK,MAAmB,WAAfA,EAAMC,QACnC,GACNC,YACEN,EAAME,QAAUF,EAAME,OAAOqD,OAAS,EAClCvD,EAAME,OAAOC,QAAO,SAAAC,GAAK,MAAmB,YAAfA,EAAMC,QACnC,GACN0D,UACE/D,EAAMoE,UAAYC,OAAOC,KAAKtE,EAAMoE,UAAUb,OAAS,EACnDc,OAAOC,KAAKtE,EAAMoE,UAClB,OAGiB,SAAA5C,GACzB,MAAO,CACL0C,oBAAqB,SAAAK,GAAK,OAAI/C,EAAS,CAAEnB,KJ9ClB,cI8CqCO,MAAO2D,KACnEZ,YAAa,SAAA1B,GAAG,OAAIT,EAAS,CAAEnB,KJhDP,eIgD2BO,MAAOqB,KAC1DkC,YAAa,SAAAI,GAAK,OAAI/C,EAAS,CAAEnB,KJ/CT,eI+C6BO,MAAO2D,QAGjDlD,EA9Cf,SAAiBI,GACf,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,CAAQzB,WAAYwB,EAAMxB,WAAY0D,YAAalC,EAAMkC,eAE3D,yBAAKjC,UAAU,oBACb,kBAAC,EAAD,CACEpB,YAAamB,EAAMnB,YACnBqD,YAAalC,EAAMkC,eAGvB,yBAAKjC,UAAU,oBACb,kBAAC,EAAD,CACEqC,UAAWtC,EAAMsC,UACjBG,oBAAqBzC,EAAMyC,oBAC3BC,YAAa1C,EAAM0C,mBCnBRK,E,uKAEjB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAN0BnB,aCUnBoB,G,mLARX,OACE,yBAAK/C,UAAU,OACb,kBAAC,EAAD,W,GAJU2B,c,gDCJZqB,EAAa,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAMaC,EAHa,kBAC1BD,GAAW,IAAIE,MAAOC,YAAc,KAAM,IAAID,MAAOE,eCNjDC,EAAe,CACnB7E,OAAQ,GACRqB,iBAAkBoD,IAClBP,SAAU,IA8DGY,EA3DC,WAAmC,IAAlChF,EAAiC,uDAAzB+E,EAAcE,EAAW,uCAChD,OAAQA,EAAO5E,MACb,IRlBqB,YQmBnB,IAAM6E,EAAS,sBAAOlF,EAAME,QAAb,CAAqB+E,EAAOrE,QAC3C,OAAO,eACFZ,EADL,CAEEE,OAAQgF,EACRd,SAAS,eACJpE,EAAMoE,SADH,kBAEApE,EAAMuB,iBAAmB2D,MAGrC,IR3BwB,eQ4BtB,IAAMvB,EAAc,YAAI3D,EAAME,QAAQC,QACpC,SAAAC,GAAK,OAAIA,EAAM6B,MAAQgD,EAAOrE,SAEhC,OAAO,eACFZ,EADL,CAEEE,OAAQyD,EACRS,SAAS,eACJpE,EAAMoE,SADH,kBAEApE,EAAMuB,iBAAmBoC,MAGrC,IRtCuB,cQuCrB,OAAO,eACF3D,EADL,CAEEuB,iBAAkB0D,EAAOrE,MACzBV,OAAQF,EAAMoE,SAASa,EAAOrE,SAElC,IR3CwB,eQ4CtB,IAAMuE,EAAc,eAAQnF,EAAMoE,UAC5B7C,EAAmBoD,IAEzB,cADOQ,EAAeF,EAAOrE,OACtB,eACFZ,EADL,GAEMA,EAAMuB,mBAAqBA,EAAmB,CAAErB,OAAQ,IAAO,GAFrE,CAGEkE,SAAUe,IAEd,KAAKC,IACH,IAAMhB,EAAWa,EAAOI,SACpBJ,EAAOI,QAAQjB,SACba,EAAOI,QAAQjB,SAEjB,GACEkB,EACJjB,OAAOC,KAAKF,GAAUb,OAAS,EAC3Ba,EAASpE,EAAMuB,kBACf,GACN,OAAO,eACFvB,EADL,CAEEE,OAAQoF,GAAiBA,EAAc/B,OAAS,EAAI+B,EAAgB,GACpElB,aAEJ,QACE,OAAOpE,ICnEPuF,EAAgB,CACpBtD,IAAK,OACLuD,aAEIC,EAAmBC,YAAeH,EAAeP,GAC1CW,EAAQC,YACnBH,EACAI,OAAOC,8BAAgCD,OAAOC,gCAEnCC,EAAYC,YAAaL,GCFhCM,E,uKAEF,OACE,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,IAAD,CAAaO,QAAS,KAAMH,UAAWA,GACrC,kBAAC,EAAD,Y,GALS1C,aAYb8C,EAAcC,SAASC,eAAe,QACxCF,EAAYG,gBACdC,kBAAQ,kBAAC,EAAD,MAAUJ,GAElBK,iBAAO,kBAAC,EAAD,MAAUL,K","file":"static/js/main.7dbd5820.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nimport { connect } from 'react-redux';\r\nconst Header = props => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"budget\">\r\n        <div className=\"budget__title\">\r\n          Available Budget in{' '}\r\n          <span className=\"budget__title--month\">{props.currentMonthYear}</span>\r\n          :\r\n        </div>\r\n        <div className=\"budget__value\">\r\n          {parseFloat(props.budget) === 0 ? '-' + props.budget : props.budget}\r\n        </div>\r\n        <div className=\"budget__income \">\r\n          <div className=\"budget__income--text\">Income</div>\r\n          <div className=\"right\">\r\n            <div className=\"budget__income--value\">\r\n              {'+' + props.totalIncome}\r\n            </div>\r\n            <div className=\"budget__income--percentage\">&nbsp;</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"budget__expenses \">\r\n          <div className=\"budget__expenses--text\">Expenses</div>\r\n          <div className=\"right \">\r\n            <div className=\"budget__expenses--value\">\r\n              {'-' + props.totalExpense}\r\n            </div>\r\n            <div className=\"budget__expenses--percentage\">\r\n              {props.expensePercentage}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst getInputs = state => ({\r\n  incomeList: state.inputs\r\n    ? state.inputs.filter(input => input.type === 'income')\r\n    : [],\r\n  expenseList: state.inputs\r\n    ? state.inputs.filter(input => input.type === 'expense')\r\n    : []\r\n});\r\n\r\nconst getTotal = list =>\r\n  list.reduce((total, input) => total + parseFloat(input.value), 0);\r\n\r\nconst getBudget = budget =>\r\n  budget > 0 ? '+' + budget.toFixed(2) : budget.toFixed(2);\r\n\r\nconst getExpensePercentage = (totalIncome, totalExpense) =>\r\n  Math.round((totalExpense / totalIncome) * 100);\r\n\r\nconst mapStateToProps = (\r\n  state,\r\n  inputs = getInputs(state),\r\n  totalIncome = getTotal(inputs.incomeList).toFixed(2),\r\n  totalExpense = getTotal(inputs.expenseList).toFixed(2),\r\n  budget = getBudget(totalIncome - totalExpense),\r\n  expensePercentage = getExpensePercentage(totalIncome, totalExpense)\r\n    ? getExpensePercentage(totalIncome, totalExpense) + '%'\r\n    : '---'\r\n) => ({\r\n  budget,\r\n  totalIncome,\r\n  totalExpense,\r\n  currentMonthYear: state.currentMonthYear,\r\n  expensePercentage\r\n});\r\nconst mapDispatchToProps = dispatch => {\r\n  return {};\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import React, { Component } from 'react';\r\nimport { NEW_INPUT } from '../../types/types';\r\nimport './Input.css';\r\nimport { connect } from 'react-redux';\r\nvar uniqid = require('uniqid');\r\nclass Input extends Component {\r\n  removeFocusClass = '';\r\n  budgetSaved = false;\r\n  state = {\r\n    input: {\r\n      type: 'income',\r\n      description: '',\r\n      value: ''\r\n    }\r\n  };\r\n  handleChange(key, event) {\r\n    const value = event.target.value;\r\n    if (key === 'type') {\r\n      this.removeFocusClass = value === 'expense' ? 'red-focus' : '';\r\n    }\r\n    this.setState(prevState => {\r\n      return {\r\n        input: {\r\n          ...prevState.input,\r\n          [key]: value\r\n        }\r\n      };\r\n    });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.state.input.description && this.state.input.value) {\r\n      this.props.storeInputToGlobal({ ...this.state.input, key: uniqid() });\r\n      this.setState(prevState => ({\r\n        input: {\r\n          type: prevState.input.type,\r\n          description: '',\r\n          value: ''\r\n        }\r\n      }));\r\n      this.selectInput.focus();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"input\">\r\n        <form className=\"input-wrapper\" onSubmit={this.handleSubmit.bind(this)}>\r\n          <select\r\n            name=\"type\"\r\n            className={'add__type ' + this.removeFocusClass}\r\n            value={this.state.input.type}\r\n            onChange={this.handleChange.bind(this, 'type')}\r\n            ref={select => {\r\n              this.selectInput = select;\r\n            }}\r\n          >\r\n            <option value=\"income\">+</option>\r\n            <option value=\"expense\">-</option>\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.input.description}\r\n            onChange={this.handleChange.bind(this, 'description')}\r\n            className={'add__description ' + this.removeFocusClass}\r\n            placeholder=\"Add description\"\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            value={this.state.input.value}\r\n            onChange={this.handleChange.bind(this, 'value')}\r\n            className={'add__value ' + this.removeFocusClass}\r\n            step=\"0.50\"\r\n            placeholder=\"Value\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className={'add__btn ' + (this.removeFocusClass ? 'red' : '')}\r\n          >\r\n            <i className=\"icon-check\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    storeInputToGlobal: input => dispatch({ type: NEW_INPUT, value: input })\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Input);\r\n","export const NEW_INPUT = 'NEW_INPUT';\r\nexport const REMOVE_INPUT = 'REMOVE_INPUT';\r\nexport const FETCH_MONTH = 'FETCH_MONTH';\r\nexport const REMOVE_MONTH = 'REMOVE_MONTH';\r\n","import React from 'react';\r\nimport './Income.css';\r\n\r\nconst Income = props => {\r\n  return (\r\n    <div className=\"income\">\r\n      <div className=\"income__label\">Income</div>\r\n      {props.incomeList.length > 0 &&\r\n        props.incomeList.map(inc => (\r\n          <div className=\"income__single\" key={inc.key}>\r\n            <span className=\"description\">{inc.description}</span>\r\n            <span className=\"value\">\r\n              {'+' + parseFloat(inc.value).toFixed(2)}\r\n            </span>\r\n            <span className=\"delete\">\r\n              <i\r\n                className=\"icon-delete\"\r\n                onClick={props.removeInput.bind(null, inc.key)}\r\n              />\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Income;\r\n","import React from 'react';\r\nimport './Expense.css';\r\nconst Expense = props => {\r\n  return (\r\n    <div className=\"expense\">\r\n      <div className=\"expense__label\">Expense</div>\r\n      {props.expenseList.length > 0 &&\r\n        props.expenseList.map(exp => (\r\n          <div className=\"expense__single\" key={exp.key}>\r\n            <span className=\"description\">{exp.description}</span>\r\n            <span className=\"value\">\r\n              {'-' + parseFloat(exp.value).toFixed(2)}\r\n            </span>\r\n            <span className=\"delete\">\r\n              <i\r\n                className=\"icon-delete\"\r\n                onClick={props.removeInput.bind(null, exp.key)}\r\n              />\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expense;\r\n","import React from 'react';\r\nimport './History.css';\r\n\r\nconst History = props => {\r\n  return (\r\n    <div className=\"income\">\r\n      <div className=\"income__label\">History</div>\r\n      {props.savedList.length > 0 &&\r\n        props.savedList.map((saveli, i) => (\r\n          <div className=\"income__single\" key={i}>\r\n            <span\r\n              className=\"description month\"\r\n              onClick={props.getSavedListContent.bind(null, saveli)}\r\n            >\r\n              {saveli}\r\n            </span>\r\n            <span className=\"delete\">\r\n              <i\r\n                className=\"icon-delete\"\r\n                onClick={props.removeMonth.bind(null, saveli)}\r\n              />\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React from 'react';\r\nimport { FETCH_MONTH, REMOVE_INPUT, REMOVE_MONTH } from '../../types/types';\r\nimport './Display.css';\r\nimport Income from './Income/Income';\r\nimport Expense from './Expense/Expense';\r\nimport History from './History/History';\r\nimport { connect } from 'react-redux';\r\nfunction Display(props) {\r\n  return (\r\n    <div className=\"display\">\r\n      <div className=\"income__wrapper\">\r\n        <Income incomeList={props.incomeList} removeInput={props.removeInput} />\r\n      </div>\r\n      <div className=\"expense__wrapper\">\r\n        <Expense\r\n          expenseList={props.expenseList}\r\n          removeInput={props.removeInput}\r\n        />\r\n      </div>\r\n      <div className=\"history__wrapper\">\r\n        <History\r\n          savedList={props.savedList}\r\n          getSavedListContent={props.getSavedListContent}\r\n          removeMonth={props.removeMonth}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    incomeList:\r\n      state.inputs && state.inputs.length > 0\r\n        ? state.inputs.filter(input => input.type === 'income')\r\n        : [],\r\n    expenseList:\r\n      state.inputs && state.inputs.length > 0\r\n        ? state.inputs.filter(input => input.type === 'expense')\r\n        : [],\r\n    savedList:\r\n      state.allSaved && Object.keys(state.allSaved).length > 0\r\n        ? Object.keys(state.allSaved)\r\n        : []\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getSavedListContent: month => dispatch({ type: FETCH_MONTH, value: month }),\r\n    removeInput: key => dispatch({ type: REMOVE_INPUT, value: key }),\r\n    removeMonth: month => dispatch({ type: REMOVE_MONTH, value: month })\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Display);\r\n","import React, { Component } from 'react';\r\nimport Header from './components/Header/Header';\r\nimport Input from './components/Input/Input';\r\nimport Display from './components/Display/Display';\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Input />\r\n        <Display />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Main from './Main';\r\nimport './App.css';\r\nimport './assets/icon-fonts/css/fontello.css';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const monthNames = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December'\r\n];\r\n\r\nconst getCurrentMonthYear = () =>\r\n  monthNames[new Date().getMonth()] + ' ' + new Date().getFullYear();\r\n\r\nexport default getCurrentMonthYear;\r\n","import { REHYDRATE } from 'redux-persist';\r\n\r\nimport {\r\n  NEW_INPUT,\r\n  REMOVE_INPUT,\r\n  FETCH_MONTH,\r\n  REMOVE_MONTH\r\n} from '../types/types';\r\nimport getCurrentMonthYear from './months/months';\r\n\r\nconst initialState = {\r\n  inputs: [],\r\n  currentMonthYear: getCurrentMonthYear(),\r\n  allSaved: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case NEW_INPUT:\r\n      const newInputs = [...state.inputs, action.value];\r\n      return {\r\n        ...state,\r\n        inputs: newInputs,\r\n        allSaved: {\r\n          ...state.allSaved,\r\n          ...{ [state.currentMonthYear]: newInputs }\r\n        }\r\n      };\r\n    case REMOVE_INPUT:\r\n      const removeInput = [...state.inputs].filter(\r\n        input => input.key !== action.value\r\n      );\r\n      return {\r\n        ...state,\r\n        inputs: removeInput,\r\n        allSaved: {\r\n          ...state.allSaved,\r\n          ...{ [state.currentMonthYear]: removeInput }\r\n        }\r\n      };\r\n    case FETCH_MONTH:\r\n      return {\r\n        ...state,\r\n        currentMonthYear: action.value,\r\n        inputs: state.allSaved[action.value]\r\n      };\r\n    case REMOVE_MONTH:\r\n      const allSavedMonths = { ...state.allSaved };\r\n      const currentMonthYear = getCurrentMonthYear();\r\n      delete allSavedMonths[action.value];\r\n      return {\r\n        ...state,\r\n        ...(state.currentMonthYear === currentMonthYear ? { inputs: [] } : {}),\r\n        allSaved: allSavedMonths\r\n      };\r\n    case REHYDRATE:\r\n      const allSaved = action.payload\r\n        ? action.payload.allSaved\r\n          ? action.payload.allSaved\r\n          : {}\r\n        : {};\r\n      const restoreInputs =\r\n        Object.keys(allSaved).length > 0\r\n          ? allSaved[state.currentMonthYear]\r\n          : [];\r\n      return {\r\n        ...state,\r\n        inputs: restoreInputs && restoreInputs.length > 0 ? restoreInputs : [],\r\n        allSaved\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\nimport reducer from '../reducer/reducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nexport const persistor = persistStore(store);\r\n","import React, { Component } from 'react';\r\nimport { render, hydrate } from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './store/store';\r\n\r\n\r\n\r\n\r\nclass Root extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nif (rootElement.hasChildNodes()) {\r\n  hydrate(<Root />, rootElement);\r\n} else {\r\n  render(<Root />, rootElement);\r\n}\r\n\r\n\r\n"],"sourceRoot":""}