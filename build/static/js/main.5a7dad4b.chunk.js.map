{"version":3,"sources":["components/Header/Header.js","components/Input/Input.js","types/types.js","components/Display/Income/Income.js","components/Display/Expense/Expense.js","components/Display/History/History.js","components/Display/Display.js","Main.js","App.js","registerServiceWorker.js","reducer/months/months.js","reducer/reducer.js","store/store.js","index.js"],"names":["getTotal","list","reduce","total","input","parseFloat","value","getExpensePercentage","totalIncome","totalExpense","Math","round","connect","state","inputs","arguments","length","undefined","incomeList","filter","type","expenseList","getInputs","toFixed","budget","getBudget","expensePercentage","currentMonthYear","dispatch","props","react_default","a","createElement","className","uniqid","require","Input","removeFocusClass","budgetSaved","description","key","event","target","this","setState","prevState","Object","objectSpread","defineProperty","preventDefault","storeInputToGlobal","selectInput","focus","_this2","onSubmit","handleSubmit","bind","name","onChange","handleChange","ref","select","placeholder","step","Component","Income","map","inc","onClick","removeInput","Expense","exp","History","savedList","saveli","i","getSavedListContent","removeMonth","allSaved","keys","month","Display_Income_Income","Display_Expense_Expense","Display_History_History","Main","Fragment","components_Header_Header","components_Input_Input","components_Display_Display","App","Main_Main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","monthNames","getCurrentMonthYear","Date","getMonth","getFullYear","initialState","reducer","action","newInputs","toConsumableArray","concat","allSavedMonths","REHYDRATE","payload","restoreInputs","persistConfig","storage","persistedReducer","persistReducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","es","integration_react","loading","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"iaAiDMA,EAAW,SAAAC,GAAI,OACnBA,EAAKC,OAAO,SAACC,EAAOC,GAAR,OAAkBD,EAAQE,WAAWD,EAAME,QAAQ,IAK3DC,EAAuB,SAACC,EAAaC,GAAd,OAC3BC,KAAKC,MAAOF,EAAeD,EAAe,MAqB7BI,cAnBS,SACtBC,GADsB,IAEtBC,EAFsBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAlBN,SAAAF,GAAK,MAAK,CAC1BK,WAAYL,EAAMC,OACdD,EAAMC,OAAOK,OAAO,SAAAf,GAAK,MAAmB,WAAfA,EAAMgB,OACnC,GACJC,YAAaR,EAAMC,OACfD,EAAMC,OAAOK,OAAO,SAAAf,GAAK,MAAmB,YAAfA,EAAMgB,OACnC,IAcKE,CAAUT,GACnBL,EAHsBO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAGRf,EAASc,EAAOI,YAAYK,QAAQ,GAClDd,EAJsBM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAIPf,EAASc,EAAOO,aAAaE,QAAQ,GACpDC,EALsBT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GANN,SAAAS,GAAM,OACtBA,EAAS,EAAI,IAAMA,EAAOD,QAAQ,GAAKC,EAAOD,QAAQ,GAU7CE,CAAUjB,EAAcC,GACjCiB,EANsBX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAMFR,EAAqBC,EAAaC,GAClDF,EAAqBC,EAAaC,GAAgB,IAClD,MARkB,MASlB,CACJe,SACAhB,cACAC,eACAkB,iBAAkBd,EAAMc,iBACxBD,sBAEyB,SAAAE,GACzB,MAAO,IAEMhB,CAzEA,SAAAiB,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,sBACsB,IACpBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAwBJ,EAAMF,kBAFhD,KAKAG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACiB,IAA7B5B,WAAWwB,EAAML,QAAgB,IAAMK,EAAML,OAASK,EAAML,QAE/DM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAf,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACZ,IAAMJ,EAAMrB,aAEfsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAAf,UAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAAf,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACZ,IAAMJ,EAAMpB,cAEfqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACZJ,EAAMH,uCC5BjBQ,SAASC,EAAQ,KACfC,6MACJC,iBAAmB,KACnBC,aAAc,IACdzB,MAAQ,CACNT,MAAO,CACLgB,KAAM,SACNmB,YAAa,GACbjC,MAAO,iFAGEkC,EAAKC,GAChB,IAAMnC,EAAQmC,EAAMC,OAAOpC,MACf,SAARkC,IACFG,KAAKN,iBAA6B,YAAV/B,EAAsB,YAAc,IAE9DqC,KAAKC,SAAS,SAAAC,GACZ,MAAO,CACLzC,MAAM0C,OAAAC,EAAA,EAAAD,CAAA,GACDD,EAAUzC,MADV0C,OAAAE,EAAA,EAAAF,CAAA,GAEFN,EAAMlC,4CAKFmC,GACXA,EAAMQ,iBACFN,KAAK9B,MAAMT,MAAMmC,aAAeI,KAAK9B,MAAMT,MAAME,QACnDqC,KAAKd,MAAMqB,mBAAXJ,OAAAC,EAAA,EAAAD,CAAA,GAAmCH,KAAK9B,MAAMT,MAA9C,CAAqDoC,IAAKN,OAC1DS,KAAKC,SAAS,SAAAC,GAAS,MAAK,CAC1BzC,MAAO,CACLgB,KAAMyB,EAAUzC,MAAMgB,KACtBmB,YAAa,GACbjC,MAAO,OAGXqC,KAAKQ,YAAYC,0CAIZ,IAAAC,EAAAV,KACP,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBqB,SAAUX,KAAKY,aAAaC,KAAKb,OAC/Db,EAAAC,EAAAC,cAAA,UACEyB,KAAK,OACLxB,UAAW,aAAeU,KAAKN,iBAC/B/B,MAAOqC,KAAK9B,MAAMT,MAAMgB,KACxBsC,SAAUf,KAAKgB,aAAaH,KAAKb,KAAM,QACvCiB,IAAK,SAAAC,GACHR,EAAKF,YAAcU,IAGrB/B,EAAAC,EAAAC,cAAA,UAAQ1B,MAAM,UAAd,KACAwB,EAAAC,EAAAC,cAAA,UAAQ1B,MAAM,WAAd,MAEFwB,EAAAC,EAAAC,cAAA,SACEZ,KAAK,OACLd,MAAOqC,KAAK9B,MAAMT,MAAMmC,YACxBmB,SAAUf,KAAKgB,aAAaH,KAAKb,KAAM,eACvCV,UAAW,oBAAsBU,KAAKN,iBACtCyB,YAAY,oBAEdhC,EAAAC,EAAAC,cAAA,SACEZ,KAAK,SACLd,MAAOqC,KAAK9B,MAAMT,MAAME,MACxBoD,SAAUf,KAAKgB,aAAaH,KAAKb,KAAM,SACvCV,UAAW,cAAgBU,KAAKN,iBAChC0B,KAAK,OACLD,YAAY,UAEdhC,EAAAC,EAAAC,cAAA,UACEZ,KAAK,SACLa,UAAW,aAAeU,KAAKN,iBAAmB,MAAQ,KAE1DP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBA1EL+B,aAyFLpD,cARS,SAAAC,GACtB,MAAO,IAEkB,SAAAe,GACzB,MAAO,CACLsB,mBAAoB,SAAA9C,GAAK,OAAIwB,EAAS,CAAER,KC3FnB,YD2FoCd,MAAOF,OAGrDQ,CAGbwB,GEvEa6B,eAvBA,SAAApC,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,UACCJ,EAAMX,WAAWF,OAAS,GACzBa,EAAMX,WAAWgD,IAAI,SAAAC,GAAG,OACtBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBO,IAAK2B,EAAI3B,KACvCV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAekC,EAAI5B,aACnCT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACb,IAAM5B,WAAW8D,EAAI7D,OAAOiB,QAAQ,IAEvCO,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UACdH,EAAAC,EAAAC,cAAA,KACEC,UAAU,cACVmC,QAASvC,EAAMwC,YAAYb,KAAK,KAAMW,EAAI3B,cCQ3C8B,SAvBC,SAAAzC,GACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,WACCJ,EAAMR,YAAYL,OAAS,GAC1Ba,EAAMR,YAAY6C,IAAI,SAAAK,GAAG,OACvBzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBO,IAAK+B,EAAI/B,KACxCV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAesC,EAAIhC,aACnCT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACb,IAAM5B,WAAWkE,EAAIjE,OAAOiB,QAAQ,IAEvCO,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UACdH,EAAAC,EAAAC,cAAA,KACEC,UAAU,cACVmC,QAASvC,EAAMwC,YAAYb,KAAK,KAAMe,EAAI/B,cCY3CgC,SAzBC,SAAA3C,GACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,WACCJ,EAAM4C,UAAUzD,OAAS,GACxBa,EAAM4C,UAAUP,IAAI,SAACQ,EAAQC,GAAT,OAClB7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBO,IAAKmC,GACnC7C,EAAAC,EAAAC,cAAA,QACEC,UAAU,oBACVmC,QAASvC,EAAM+C,oBAAoBpB,KAAK,KAAMkB,IAE7CA,GAEH5C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UACdH,EAAAC,EAAAC,cAAA,KACEC,UAAU,cACVmC,QAASvC,EAAMgD,YAAYrB,KAAK,KAAMkB,YCWtD,IAuBe9D,cAvBS,SAAAC,GACtB,MAAO,CACLK,WACEL,EAAMC,QAAUD,EAAMC,OAAOE,OAAS,EAClCH,EAAMC,OAAOK,OAAO,SAAAf,GAAK,MAAmB,WAAfA,EAAMgB,OACnC,GACNC,YACER,EAAMC,QAAUD,EAAMC,OAAOE,OAAS,EAClCH,EAAMC,OAAOK,OAAO,SAAAf,GAAK,MAAmB,YAAfA,EAAMgB,OACnC,GACNqD,UACE5D,EAAMiE,UAAYhC,OAAOiC,KAAKlE,EAAMiE,UAAU9D,OAAS,EACnD8B,OAAOiC,KAAKlE,EAAMiE,UAClB,KAGiB,SAAAlD,GACzB,MAAO,CACLgD,oBAAqB,SAAAI,GAAK,OAAIpD,EAAS,CAAER,KJ9ClB,cI8CqCd,MAAO0E,KACnEX,YAAa,SAAA7B,GAAG,OAAIZ,EAAS,CAAER,KJhDP,eIgD2Bd,MAAOkC,KAC1DqC,YAAa,SAAAG,GAAK,OAAIpD,EAAS,CAAER,KJ/CT,eI+C6Bd,MAAO0E,OAGjDpE,CA9Cf,SAAiBiB,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACiD,EAAD,CAAQ/D,WAAYW,EAAMX,WAAYmD,YAAaxC,EAAMwC,eAE3DvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACkD,EAAD,CACE7D,YAAaQ,EAAMR,YACnBgD,YAAaxC,EAAMwC,eAGvBvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACmD,EAAD,CACEV,UAAW5C,EAAM4C,UACjBG,oBAAqB/C,EAAM+C,oBAC3BC,YAAahD,EAAMgD,kBCnBRO,mLAEjB,OACEtD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsD,SAAA,KACEvD,EAAAC,EAAAC,cAACsD,EAAD,MACAxD,EAAAC,EAAAC,cAACuD,EAAD,MACAzD,EAAAC,EAAAC,cAACwD,EAAD,cAN0BxB,aCUnByB,gMARX,OACE3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0D,EAAD,cAJU1B,cCMZ2B,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5F,QACfsF,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,yDCtE3DC,EAAa,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAMaC,EAHa,kBAC1BD,GAAW,IAAIE,MAAOC,YAAc,KAAM,IAAID,MAAOE,eCNjDC,EAAe,CACnBxG,OAAQ,GACRa,iBAAkBuF,IAClBpC,SAAU,IA8DGyC,EA3DC,WAAkC,IAAjC1G,EAAiCE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBuG,EAAcE,EAAWzG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQuG,EAAOpG,MACb,ITlBqB,YSmBnB,IAAMqG,EAAS3E,OAAA4E,EAAA,EAAA5E,CAAOjC,EAAMC,QAAb6G,OAAA,CAAqBH,EAAOlH,QAC3C,OAAOwC,OAAAC,EAAA,EAAAD,CAAA,GACFjC,EADL,CAEEC,OAAQ2G,EACR3C,SAAShC,OAAAC,EAAA,EAAAD,CAAA,GACJjC,EAAMiE,SADHhC,OAAAE,EAAA,EAAAF,CAAA,GAEAjC,EAAMc,iBAAmB8F,MAGrC,IT3BwB,eS4BtB,IAAMpD,EAAcvB,OAAA4E,EAAA,EAAA5E,CAAIjC,EAAMC,QAAQK,OACpC,SAAAf,GAAK,OAAIA,EAAMoC,MAAQgF,EAAOlH,QAEhC,OAAOwC,OAAAC,EAAA,EAAAD,CAAA,GACFjC,EADL,CAEEC,OAAQuD,EACRS,SAAShC,OAAAC,EAAA,EAAAD,CAAA,GACJjC,EAAMiE,SADHhC,OAAAE,EAAA,EAAAF,CAAA,GAEAjC,EAAMc,iBAAmB0C,MAGrC,ITtCuB,cSuCrB,OAAOvB,OAAAC,EAAA,EAAAD,CAAA,GACFjC,EADL,CAEEc,iBAAkB6F,EAAOlH,MACzBQ,OAAQD,EAAMiE,SAAS0C,EAAOlH,SAElC,IT3CwB,eS4CtB,IAAMsH,EAAc9E,OAAAC,EAAA,EAAAD,CAAA,GAAQjC,EAAMiE,UAC5BnD,EAAmBuF,IAEzB,cADOU,EAAeJ,EAAOlH,OACtBwC,OAAAC,EAAA,EAAAD,CAAA,GACFjC,EACCA,EAAMc,mBAAqBA,EAAmB,CAAEb,OAAQ,IAAO,GAFrE,CAGEgE,SAAU8C,IAEd,KAAKC,IACH,IAAM/C,EAAW0C,EAAOM,SACpBN,EAAOM,QAAQhD,SACb0C,EAAOM,QAAQhD,SAEjB,GACEiD,EACJjF,OAAOiC,KAAKD,GAAU9D,OAAS,EAC3B8D,EAASjE,EAAMc,kBACf,GACN,OAAOmB,OAAAC,EAAA,EAAAD,CAAA,GACFjC,EADL,CAEEC,OAAQiH,GAAiBA,EAAc/G,OAAS,EAAI+G,EAAgB,GACpEjD,aAEJ,QACE,OAAOjE,ICnEPmH,EAAgB,CACpBxF,IAAK,OACLyF,aAEIC,EAAmBC,YAAeH,EAAeT,GAC1Ca,EAAQC,YACnBH,EACArC,OAAOyC,8BAAgCzC,OAAOyC,gCAEnCC,EAAYC,YAAaJ,GCJtCK,IAASC,OACP5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAUP,MAAOA,GACftG,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAaC,QAAS,KAAMN,UAAWA,GACrCzG,EAAAC,EAAAC,cAAC8G,EAAD,QAGJC,SAASC,eAAe,SJKX,WACb,GAA6C,kBAAmB7C,UAAW,CAGzE,GADkB,IAAI8C,IAAIC,kBAAwBrD,OAAOC,UAC3CqD,SAAWtD,OAAOC,SAASqD,OAIvC,OAGFtD,OAAOuD,iBAAiB,OAAQ,WAC9B,IAAMlD,EAAK,GAAAyB,OAAMuB,kBAAN,sBAENvD,EAwCX,SAAiCO,GAE/BmD,MAAMnD,GACHI,KAAK,SAAAgD,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CvD,UAAUC,cAAcuD,MAAMrD,KAAK,SAAAC,GACjCA,EAAaqD,aAAatD,KAAK,WAC7BT,OAAOC,SAAS+D,aAKpB5D,EAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEAzDAgD,CAAwB5D,GAHxBD,EAAgBC,MInBxB6D","file":"static/js/main.5a7dad4b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nimport { connect } from 'react-redux';\r\nconst Header = props => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"budget\">\r\n        <div className=\"budget__title\">\r\n          Available Budget in{' '}\r\n          <span className=\"budget__title--month\">{props.currentMonthYear}</span>\r\n          :\r\n        </div>\r\n        <div className=\"budget__value\">\r\n          {parseFloat(props.budget) === 0 ? '-' + props.budget : props.budget}\r\n        </div>\r\n        <div className=\"budget__income \">\r\n          <div className=\"budget__income--text\">Income</div>\r\n          <div className=\"right\">\r\n            <div className=\"budget__income--value\">\r\n              {'+' + props.totalIncome}\r\n            </div>\r\n            <div className=\"budget__income--percentage\">&nbsp;</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"budget__expenses \">\r\n          <div className=\"budget__expenses--text\">Expenses</div>\r\n          <div className=\"right \">\r\n            <div className=\"budget__expenses--value\">\r\n              {'-' + props.totalExpense}\r\n            </div>\r\n            <div className=\"budget__expenses--percentage\">\r\n              {props.expensePercentage}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst getInputs = state => ({\r\n  incomeList: state.inputs\r\n    ? state.inputs.filter(input => input.type === 'income')\r\n    : [],\r\n  expenseList: state.inputs\r\n    ? state.inputs.filter(input => input.type === 'expense')\r\n    : []\r\n});\r\n\r\nconst getTotal = list =>\r\n  list.reduce((total, input) => total + parseFloat(input.value), 0);\r\n\r\nconst getBudget = budget =>\r\n  budget > 0 ? '+' + budget.toFixed(2) : budget.toFixed(2);\r\n\r\nconst getExpensePercentage = (totalIncome, totalExpense) =>\r\n  Math.round((totalExpense / totalIncome) * 100);\r\n\r\nconst mapStateToProps = (\r\n  state,\r\n  inputs = getInputs(state),\r\n  totalIncome = getTotal(inputs.incomeList).toFixed(2),\r\n  totalExpense = getTotal(inputs.expenseList).toFixed(2),\r\n  budget = getBudget(totalIncome - totalExpense),\r\n  expensePercentage = getExpensePercentage(totalIncome, totalExpense)\r\n    ? getExpensePercentage(totalIncome, totalExpense) + '%'\r\n    : '---'\r\n) => ({\r\n  budget,\r\n  totalIncome,\r\n  totalExpense,\r\n  currentMonthYear: state.currentMonthYear,\r\n  expensePercentage\r\n});\r\nconst mapDispatchToProps = dispatch => {\r\n  return {};\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import React, { Component } from 'react';\r\nimport { NEW_INPUT } from '../../types/types';\r\nimport './Input.css';\r\nimport { connect } from 'react-redux';\r\nvar uniqid = require('uniqid');\r\nclass Input extends Component {\r\n  removeFocusClass = '';\r\n  budgetSaved = false;\r\n  state = {\r\n    input: {\r\n      type: 'income',\r\n      description: '',\r\n      value: ''\r\n    }\r\n  };\r\n  handleChange(key, event) {\r\n    const value = event.target.value;\r\n    if (key === 'type') {\r\n      this.removeFocusClass = value === 'expense' ? 'red-focus' : '';\r\n    }\r\n    this.setState(prevState => {\r\n      return {\r\n        input: {\r\n          ...prevState.input,\r\n          [key]: value\r\n        }\r\n      };\r\n    });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.state.input.description && this.state.input.value) {\r\n      this.props.storeInputToGlobal({ ...this.state.input, key: uniqid() });\r\n      this.setState(prevState => ({\r\n        input: {\r\n          type: prevState.input.type,\r\n          description: '',\r\n          value: ''\r\n        }\r\n      }));\r\n      this.selectInput.focus();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"input\">\r\n        <form className=\"input-wrapper\" onSubmit={this.handleSubmit.bind(this)}>\r\n          <select\r\n            name=\"type\"\r\n            className={'add__type ' + this.removeFocusClass}\r\n            value={this.state.input.type}\r\n            onChange={this.handleChange.bind(this, 'type')}\r\n            ref={select => {\r\n              this.selectInput = select;\r\n            }}\r\n          >\r\n            <option value=\"income\">+</option>\r\n            <option value=\"expense\">-</option>\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.input.description}\r\n            onChange={this.handleChange.bind(this, 'description')}\r\n            className={'add__description ' + this.removeFocusClass}\r\n            placeholder=\"Add description\"\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            value={this.state.input.value}\r\n            onChange={this.handleChange.bind(this, 'value')}\r\n            className={'add__value ' + this.removeFocusClass}\r\n            step=\"0.50\"\r\n            placeholder=\"Value\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className={'add__btn ' + (this.removeFocusClass ? 'red' : '')}\r\n          >\r\n            <i className=\"icon-check\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    storeInputToGlobal: input => dispatch({ type: NEW_INPUT, value: input })\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Input);\r\n","export const NEW_INPUT = 'NEW_INPUT';\r\nexport const REMOVE_INPUT = 'REMOVE_INPUT';\r\nexport const FETCH_MONTH = 'FETCH_MONTH';\r\nexport const REMOVE_MONTH = 'REMOVE_MONTH';\r\n","import React from 'react';\r\nimport './Income.css';\r\n\r\nconst Income = props => {\r\n  return (\r\n    <div className=\"income\">\r\n      <div className=\"income__label\">Income</div>\r\n      {props.incomeList.length > 0 &&\r\n        props.incomeList.map(inc => (\r\n          <div className=\"income__single\" key={inc.key}>\r\n            <span className=\"description\">{inc.description}</span>\r\n            <span className=\"value\">\r\n              {'+' + parseFloat(inc.value).toFixed(2)}\r\n            </span>\r\n            <span className=\"delete\">\r\n              <i\r\n                className=\"icon-delete\"\r\n                onClick={props.removeInput.bind(null, inc.key)}\r\n              />\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Income;\r\n","import React from 'react';\r\nimport './Expense.css';\r\nconst Expense = props => {\r\n  return (\r\n    <div className=\"expense\">\r\n      <div className=\"expense__label\">Expense</div>\r\n      {props.expenseList.length > 0 &&\r\n        props.expenseList.map(exp => (\r\n          <div className=\"expense__single\" key={exp.key}>\r\n            <span className=\"description\">{exp.description}</span>\r\n            <span className=\"value\">\r\n              {'-' + parseFloat(exp.value).toFixed(2)}\r\n            </span>\r\n            <span className=\"delete\">\r\n              <i\r\n                className=\"icon-delete\"\r\n                onClick={props.removeInput.bind(null, exp.key)}\r\n              />\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expense;\r\n","import React from 'react';\r\nimport './History.css';\r\n\r\nconst History = props => {\r\n  return (\r\n    <div className=\"income\">\r\n      <div className=\"income__label\">History</div>\r\n      {props.savedList.length > 0 &&\r\n        props.savedList.map((saveli, i) => (\r\n          <div className=\"income__single\" key={i}>\r\n            <span\r\n              className=\"description month\"\r\n              onClick={props.getSavedListContent.bind(null, saveli)}\r\n            >\r\n              {saveli}\r\n            </span>\r\n            <span className=\"delete\">\r\n              <i\r\n                className=\"icon-delete\"\r\n                onClick={props.removeMonth.bind(null, saveli)}\r\n              />\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React from 'react';\r\nimport { FETCH_MONTH, REMOVE_INPUT, REMOVE_MONTH } from '../../types/types';\r\nimport './Display.css';\r\nimport Income from './Income/Income';\r\nimport Expense from './Expense/Expense';\r\nimport History from './History/History';\r\nimport { connect } from 'react-redux';\r\nfunction Display(props) {\r\n  return (\r\n    <div className=\"display\">\r\n      <div className=\"income__wrapper\">\r\n        <Income incomeList={props.incomeList} removeInput={props.removeInput} />\r\n      </div>\r\n      <div className=\"expense__wrapper\">\r\n        <Expense\r\n          expenseList={props.expenseList}\r\n          removeInput={props.removeInput}\r\n        />\r\n      </div>\r\n      <div className=\"history__wrapper\">\r\n        <History\r\n          savedList={props.savedList}\r\n          getSavedListContent={props.getSavedListContent}\r\n          removeMonth={props.removeMonth}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    incomeList:\r\n      state.inputs && state.inputs.length > 0\r\n        ? state.inputs.filter(input => input.type === 'income')\r\n        : [],\r\n    expenseList:\r\n      state.inputs && state.inputs.length > 0\r\n        ? state.inputs.filter(input => input.type === 'expense')\r\n        : [],\r\n    savedList:\r\n      state.allSaved && Object.keys(state.allSaved).length > 0\r\n        ? Object.keys(state.allSaved)\r\n        : []\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getSavedListContent: month => dispatch({ type: FETCH_MONTH, value: month }),\r\n    removeInput: key => dispatch({ type: REMOVE_INPUT, value: key }),\r\n    removeMonth: month => dispatch({ type: REMOVE_MONTH, value: month })\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Display);\r\n","import React, { Component } from 'react';\r\nimport Header from './components/Header/Header';\r\nimport Input from './components/Input/Input';\r\nimport Display from './components/Display/Display';\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Input />\r\n        <Display />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Main from './Main';\r\nimport './App.css';\r\nimport './assets/icon-fonts/css/fontello.css';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const monthNames = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December'\r\n];\r\n\r\nconst getCurrentMonthYear = () =>\r\n  monthNames[new Date().getMonth()] + ' ' + new Date().getFullYear();\r\n\r\nexport default getCurrentMonthYear;\r\n","import { REHYDRATE } from 'redux-persist';\r\n\r\nimport {\r\n  NEW_INPUT,\r\n  REMOVE_INPUT,\r\n  FETCH_MONTH,\r\n  REMOVE_MONTH\r\n} from '../types/types';\r\nimport getCurrentMonthYear from './months/months';\r\n\r\nconst initialState = {\r\n  inputs: [],\r\n  currentMonthYear: getCurrentMonthYear(),\r\n  allSaved: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case NEW_INPUT:\r\n      const newInputs = [...state.inputs, action.value];\r\n      return {\r\n        ...state,\r\n        inputs: newInputs,\r\n        allSaved: {\r\n          ...state.allSaved,\r\n          ...{ [state.currentMonthYear]: newInputs }\r\n        }\r\n      };\r\n    case REMOVE_INPUT:\r\n      const removeInput = [...state.inputs].filter(\r\n        input => input.key !== action.value\r\n      );\r\n      return {\r\n        ...state,\r\n        inputs: removeInput,\r\n        allSaved: {\r\n          ...state.allSaved,\r\n          ...{ [state.currentMonthYear]: removeInput }\r\n        }\r\n      };\r\n    case FETCH_MONTH:\r\n      return {\r\n        ...state,\r\n        currentMonthYear: action.value,\r\n        inputs: state.allSaved[action.value]\r\n      };\r\n    case REMOVE_MONTH:\r\n      const allSavedMonths = { ...state.allSaved };\r\n      const currentMonthYear = getCurrentMonthYear();\r\n      delete allSavedMonths[action.value];\r\n      return {\r\n        ...state,\r\n        ...(state.currentMonthYear === currentMonthYear ? { inputs: [] } : {}),\r\n        allSaved: allSavedMonths\r\n      };\r\n    case REHYDRATE:\r\n      const allSaved = action.payload\r\n        ? action.payload.allSaved\r\n          ? action.payload.allSaved\r\n          : {}\r\n        : {};\r\n      const restoreInputs =\r\n        Object.keys(allSaved).length > 0\r\n          ? allSaved[state.currentMonthYear]\r\n          : [];\r\n      return {\r\n        ...state,\r\n        inputs: restoreInputs && restoreInputs.length > 0 ? restoreInputs : [],\r\n        allSaved\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\nimport reducer from '../reducer/reducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './store/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}